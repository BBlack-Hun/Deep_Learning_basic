{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Jenghun Kim - _3 신경망 데이터 표현","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"ebow7b5dS-KW","colab_type":"text"},"source":["# 신경망 데이터 표현"]},{"cell_type":"code","metadata":{"id":"9BDaiyTNBFAN","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1600821035354,"user_tz":-540,"elapsed":1226,"user":{"displayName":"Jenghun Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh8ozrjTEd4aTd3Fh173JQLBXjO_CSmgf9PQPLonQ=s64","userId":"01114927838914716549"}}},"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","plt.style.use(['seaborn-whitegrid'])"],"execution_count":2,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"7Ic-YQ7xBQ9m","colab_type":"text"},"source":["## 텐서(Tensor)\n","- 일반적으로 텐서는 3차원 이상을 다룰 때 표현하는 방식이지만, 여기서는 어떠한 데이터를 표현할 때, 그 값 모두를 텐서라고 부르기로 함\n","\n","      a = np.array([1, 2])\n","      b = np.array([[1, 2],\n","                    [3, 4]])\n","      c = np.array([10]) \n","      d = np.array(3)  \n","  \n","    a, b, c, d 모두 텐서라고 지칭할 수 있음\n","  \n","- 랭크(rank): 텐서의 축을 나타내고, 넘파이(numpy)의 `ndim`으로 구할 수 있음\n","\n","      a = np.array([1, 2])\n","        >> ndim = 1  \n","      b = np.array([[1, 2],\n","                    [3, 4]])\n","        >> ndim = 2\n","      d = np.array(3)\n","        >> ndim = 0\n","      \n","    위의 예시에서 알 수 있듯이 대괄호( [ ] )의 개수가 곧 랭크(축)의 값\n","    \n","      \n","- 크기(shape): 텐서의 각 축을 따라 얼마나 많은 차원이 있는지를 나타내며, 파이썬의 튜플(tuple) 형태\n"]},{"cell_type":"markdown","metadata":{"id":"ehzSlqdjBVxB","colab_type":"text"},"source":["## 그림으로 이해하기\n","\n","![array](https://www.oreilly.com/library/view/elegant-scipy/9781491922927/assets/elsp_0105.png)\n","<br /><sub>출처: https://www.oreilly.com/library/view/elegant-scipy/9781491922927/ch01.html</sub>"]},{"cell_type":"markdown","metadata":{"id":"AxZDqX5HBYMf","colab_type":"text"},"source":["## 스칼라(0차원 텐서)\n","- 하나의 숫자를 담고 있는 텐서(tensor)\n","- 형상은 없음"]},{"cell_type":"code","metadata":{"id":"TicFogkHBPRW","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":68},"executionInfo":{"status":"ok","timestamp":1600821177528,"user_tz":-540,"elapsed":1371,"user":{"displayName":"Jenghun Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh8ozrjTEd4aTd3Fh173JQLBXjO_CSmgf9PQPLonQ=s64","userId":"01114927838914716549"}},"outputId":"06943014-642a-4f62-9d30-c58804c209df"},"source":["x = np.array(3)\n","print(x)\n","print(x.shape)\n","print(np.ndim(x))"],"execution_count":4,"outputs":[{"output_type":"stream","text":["3\n","()\n","0\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"rab-I4gyBeZw","colab_type":"text"},"source":["## 벡터(1차원 텐서)\n","- 숫자의 배열을 나타내는 텐서\n"]},{"cell_type":"code","metadata":{"id":"s4gm0mRVBZwa","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":68},"executionInfo":{"status":"ok","timestamp":1600821195118,"user_tz":-540,"elapsed":1104,"user":{"displayName":"Jenghun Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh8ozrjTEd4aTd3Fh173JQLBXjO_CSmgf9PQPLonQ=s64","userId":"01114927838914716549"}},"outputId":"bd35a07c-42e9-43bf-d83a-d29b945b5416"},"source":["x = np.array([1,2,3,4])\n","print(x)\n","print(x.shape)\n","print(np.ndim(x))"],"execution_count":6,"outputs":[{"output_type":"stream","text":["[1 2 3 4]\n","(4,)\n","1\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"-S3G7ym8Bh6I","colab_type":"text"},"source":["### 벡터의 합\n","- 같은 형상(shape)일 때, 각 원소별로 계산"]},{"cell_type":"code","metadata":{"id":"6pzPyoNqBcgn","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":102},"executionInfo":{"status":"ok","timestamp":1600821247852,"user_tz":-540,"elapsed":1223,"user":{"displayName":"Jenghun Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh8ozrjTEd4aTd3Fh173JQLBXjO_CSmgf9PQPLonQ=s64","userId":"01114927838914716549"}},"outputId":"2df367ea-a81b-4886-9b31-e7f0e0b5d93a"},"source":["a = np.array([1,2,3,4])\n","b = np.array([5,6,7,8])\n","c = a + b\n","\n","print(a)\n","print(b)\n","print(c)\n","print(c.shape)\n","print(np.ndim(c))"],"execution_count":8,"outputs":[{"output_type":"stream","text":["[1 2 3 4]\n","[5 6 7 8]\n","[ 6  8 10 12]\n","(4,)\n","1\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"RqnBR8DyBla5","colab_type":"text"},"source":["### 벡터의 곱\n","-  $A = (x_1, \\ x_2, \\ x3, \\ ..., \\ x_n)$  \n","  $B = (y_1, \\ y_2, \\ y3, \\ ..., \\ y_n)$ 일 때,\n","- 원소곱\n","  - 같은 형상(shape)일 때, 각 원소별로 계산   \n","   \n","    $A \\times B = (x_1, \\ x_2, \\ x_3, \\ ..., \\ x_n) \\times (y_1, \\ y_2, \\ y_3, \\ ..., \\ y_n) \\\\   \n","    \\qquad = (x_1y_1, \\ x_2y_2, \\ x_3y_3, \\ ... \\ ,  \\ x_ny_n)  $\n","    \n","- 벡터곱(product, dot)\n","  - 두 1차원 벡터가 있을 때 **각각의 성분끼리의 곱을 모두 더하는 계산**  \n","  \n","    $A \\bullet B \\Rightarrow A \\times B^T = (x_1, \\ x_2, \\ x_3, \\ ..., \\ x_n) \\begin{pmatrix} y_1 \\\\ y_2 \\\\ y_3 \\\\ ... \\\\ y_n  \\end{pmatrix} \\\\  \n","    \\qquad = (x_1y_1 + \\ x_2y_2 + \\ x_3y_3 + \\ ... + \\ x_ny_n)  $\n","  "]},{"cell_type":"code","metadata":{"id":"kxcrUZPwBceX","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":136},"executionInfo":{"status":"ok","timestamp":1600821380840,"user_tz":-540,"elapsed":1320,"user":{"displayName":"Jenghun Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh8ozrjTEd4aTd3Fh173JQLBXjO_CSmgf9PQPLonQ=s64","userId":"01114927838914716549"}},"outputId":"6f9e5ea5-e878-4d2d-9df2-9ef77e31db6d"},"source":["a = np.array([1,2,3,4])\n","b= np.array([5,6,7,8])\n","c= a* b\n","print(c)\n","print(c.shape)\n","print(np.ndim(c))\n","print('-------------------')\n","x=  np.array([1,2,0])\n","y=np.array([0,2,1])\n","z = np.dot(x,y)\n","print(z)\n","print(z.shape)\n","print(np.ndim(z))"],"execution_count":11,"outputs":[{"output_type":"stream","text":["[ 5 12 21 32]\n","(4,)\n","1\n","-------------------\n","4\n","()\n","0\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"IIKrmykBBpn4","colab_type":"text"},"source":["## 스칼라와 벡터의 곱\n"]},{"cell_type":"code","metadata":{"id":"CWNGJnA9BcaU","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1600822411564,"user_tz":-540,"elapsed":1076,"user":{"displayName":"Jenghun Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh8ozrjTEd4aTd3Fh173JQLBXjO_CSmgf9PQPLonQ=s64","userId":"01114927838914716549"}},"outputId":"4b71014c-83f7-4e25-e14f-5066de3ee8fe"},"source":["a = np.array(10)\n","b= np.array([1,2,3])\n","print( a * b)"],"execution_count":13,"outputs":[{"output_type":"stream","text":["[10 20 30]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"a_WUc48rBszu","colab_type":"text"},"source":["## 2차원 텐서(행렬)\n","- 2차원 텐서는 행렬로 생각할 수 있음\n","    - (m, n) 형상의 배열\n","\n","![matrix](https://upload.wikimedia.org/wikipedia/commons/thumb/4/4d/Matrix_ko.svg/570px-Matrix_ko.svg.png)\n","<br /><sub>출처: https://ko.wikipedia.org/wiki/%ED%96%89%EB%A0%AC</sub>\n"]},{"cell_type":"code","metadata":{"id":"M6QQeHZJBcX6","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":153},"executionInfo":{"status":"ok","timestamp":1600822517554,"user_tz":-540,"elapsed":1224,"user":{"displayName":"Jenghun Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh8ozrjTEd4aTd3Fh173JQLBXjO_CSmgf9PQPLonQ=s64","userId":"01114927838914716549"}},"outputId":"00e7a1ad-6292-4562-fd87-7566a3420fb3"},"source":["matrix  = np.array([[1,2,3,],\n","                    [4,5,6]])\n","print(matrix)\n","print(matrix.shape)\n","print(np.ndim(matrix))\n","print('-----------------')\n","matrix2 = np.array([[1,2,3,4,]])\n","print(matrix2)\n","print(matrix2.shape)\n","print(np.ndim(matrix2))"],"execution_count":17,"outputs":[{"output_type":"stream","text":["[[1 2 3]\n"," [4 5 6]]\n","(2, 3)\n","2\n","-----------------\n","[[1 2 3 4]]\n","(1, 4)\n","2\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"6LEedf9GB2G1","colab_type":"text"},"source":["### 행렬 원소곱\n","- 같은 형상(shape)일 때 덧셈, 곱셈과 같은 연산은 원소별로 진행\n"]},{"cell_type":"code","metadata":{"id":"PchJ4TwyBcVc","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":170},"executionInfo":{"status":"ok","timestamp":1600822660406,"user_tz":-540,"elapsed":1229,"user":{"displayName":"Jenghun Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh8ozrjTEd4aTd3Fh173JQLBXjO_CSmgf9PQPLonQ=s64","userId":"01114927838914716549"}},"outputId":"e292f3bd-b3f4-47e3-d37a-a7785993034e"},"source":["A = np.array([[1,2],[3,4]])\n","B = np.array([[10,10],[10,10]])\n","\n","print('행렬 A\\n', A)\n","print('행렬 B\\n', B)\n","print('A * B\\n', A* B)"],"execution_count":18,"outputs":[{"output_type":"stream","text":["행렬 A\n"," [[1 2]\n"," [3 4]]\n","행렬 B\n"," [[10 10]\n"," [10 10]]\n","A * B\n"," [[10 20]\n"," [30 40]]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"_cvFlhuCB5hz","colab_type":"text"},"source":["### 행렬 점곱(내적, product)\n","- 1차원 벡터와 마찬가지로 앞 행렬의 열과 뒤 행렬의 행의 수가 같아야함"]},{"cell_type":"code","metadata":{"id":"452G60yvBcRr","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1600822761300,"user_tz":-540,"elapsed":1046,"user":{"displayName":"Jenghun Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh8ozrjTEd4aTd3Fh173JQLBXjO_CSmgf9PQPLonQ=s64","userId":"01114927838914716549"}},"outputId":"eb133fcc-ba83-44e3-ef86-f34722d10745"},"source":["M = np.array([[1,2],[3,4]])\n","N = np.array([[2,3,4],[2,3,4]])\n","print('행렬 M\\n', M)\n","print('행렬 N\\n', N)\n","L = np.dot(M,N)\n","print('행렬 L\\n', L)\n","print(L.shape)\n","print(np.ndim(L))"],"execution_count":21,"outputs":[{"output_type":"stream","text":["행렬 M\n"," [[1 2]\n"," [3 4]]\n","행렬 N\n"," [[2 3 4]\n"," [2 3 4]]\n","행렬 L\n"," [[ 6  9 12]\n"," [14 21 28]]\n","(2, 3)\n","2\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"oSgCXPJzBb0_","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":266},"executionInfo":{"status":"error","timestamp":1600822817405,"user_tz":-540,"elapsed":1325,"user":{"displayName":"Jenghun Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh8ozrjTEd4aTd3Fh173JQLBXjO_CSmgf9PQPLonQ=s64","userId":"01114927838914716549"}},"outputId":"2f5cc751-3aab-4b27-94ef-ab4bf80fe4aa"},"source":["m = np.array([[1],[2],[3]])\n","n = np.array([[1],[2],[3]])\n","l = np.dot(m,n)\n","\n","print(l)\n","print(l.shape)\n","print(np.ndim(l))"],"execution_count":22,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-22-6ed0118f52db>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mm\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mn\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0ml\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mm\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mn\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ml\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<__array_function__ internals>\u001b[0m in \u001b[0;36mdot\u001b[0;34m(*args, **kwargs)\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: shapes (3,1) and (3,1) not aligned: 1 (dim 1) != 3 (dim 0)"]}]},{"cell_type":"markdown","metadata":{"id":"gfWlP-BtCAzE","colab_type":"text"},"source":["### 역행렬\n","- 어떤 행렬 A가 있을 때, 곱해서 단위행렬(E)를 만드는 행렬 B가 존재한다면, 행렬 B는 A의 역행렬"]},{"cell_type":"code","metadata":{"id":"0i_L09ggBbwa","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":153},"executionInfo":{"status":"ok","timestamp":1600822917541,"user_tz":-540,"elapsed":1153,"user":{"displayName":"Jenghun Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh8ozrjTEd4aTd3Fh173JQLBXjO_CSmgf9PQPLonQ=s64","userId":"01114927838914716549"}},"outputId":"4e1c7de7-3d6f-4222-9efb-6fe2d1f8e7c3"},"source":["A = np.array([[1, 2.],[3,4]])\n","print('행렬 A\\n', A)\n","B = np.linalg.inv(A)\n","print('행렬 B\\n', B)\n","print(np.dot(A, B))"],"execution_count":25,"outputs":[{"output_type":"stream","text":["행렬 A\n"," [[1. 2.]\n"," [3. 4.]]\n","행렬 B\n"," [[-2.   1. ]\n"," [ 1.5 -0.5]]\n","[[1.0000000e+00 0.0000000e+00]\n"," [8.8817842e-16 1.0000000e+00]]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Ra6130CkBbuz","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":358},"executionInfo":{"status":"error","timestamp":1600822966388,"user_tz":-540,"elapsed":1304,"user":{"displayName":"Jenghun Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh8ozrjTEd4aTd3Fh173JQLBXjO_CSmgf9PQPLonQ=s64","userId":"01114927838914716549"}},"outputId":"9cc6d6d4-78c2-410c-d273-b43cbec5b714"},"source":["B = np.array([[3,3],[2,2]])\n","print(np.linalg.inv(B))"],"execution_count":26,"outputs":[{"output_type":"error","ename":"LinAlgError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mLinAlgError\u001b[0m                               Traceback (most recent call last)","\u001b[0;32m<ipython-input-26-e71f33517a2d>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mB\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlinalg\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mB\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<__array_function__ internals>\u001b[0m in \u001b[0;36minv\u001b[0;34m(*args, **kwargs)\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/numpy/linalg/linalg.py\u001b[0m in \u001b[0;36minv\u001b[0;34m(a)\u001b[0m\n\u001b[1;32m    545\u001b[0m     \u001b[0msignature\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'D->D'\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0misComplexType\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mt\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0;34m'd->d'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    546\u001b[0m     \u001b[0mextobj\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mget_linalg_error_extobj\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_raise_linalgerror_singular\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 547\u001b[0;31m     \u001b[0mainv\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_umath_linalg\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msignature\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msignature\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mextobj\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mextobj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    548\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mwrap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mainv\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult_t\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    549\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/numpy/linalg/linalg.py\u001b[0m in \u001b[0;36m_raise_linalgerror_singular\u001b[0;34m(err, flag)\u001b[0m\n\u001b[1;32m     95\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     96\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0m_raise_linalgerror_singular\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0merr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mflag\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 97\u001b[0;31m     \u001b[0;32mraise\u001b[0m \u001b[0mLinAlgError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Singular matrix\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     98\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     99\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0m_raise_linalgerror_nonposdef\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0merr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mflag\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mLinAlgError\u001b[0m: Singular matrix"]}]},{"cell_type":"markdown","metadata":{"id":"G75LpaMmCGtW","colab_type":"text"},"source":["### 전치행렬\n","- 행과 열을 바꾼 배열의 형태\n","\n","![](https://upload.wikimedia.org/wikipedia/commons/e/e4/Matrix_transpose.gif)\n","<br /><sub>출처: https://ko.wikipedia.org/wiki/%EC%A0%84%EC%B9%98%ED%96%89%EB%A0%AC</sub>"]},{"cell_type":"code","metadata":{"id":"3QKPQKIjBbre","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":221},"executionInfo":{"status":"ok","timestamp":1600823045646,"user_tz":-540,"elapsed":1273,"user":{"displayName":"Jenghun Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh8ozrjTEd4aTd3Fh173JQLBXjO_CSmgf9PQPLonQ=s64","userId":"01114927838914716549"}},"outputId":"e726fb01-6f64-4ad5-935f-82f0ac78f5a6"},"source":["A = np.array([[1.,2.,3.],[4,5,6]])\n","print(\"A\\n\", A)\n","print(\"A.shape\\n\", A.shape)\n","print('-----------')\n","A_ = A.T\n","print(\"A의 전치행렬\\n\", A_)\n","print(\"A_T.shape\\n\", A_.shape)"],"execution_count":27,"outputs":[{"output_type":"stream","text":["A\n"," [[1. 2. 3.]\n"," [4. 5. 6.]]\n","A.shape\n"," (2, 3)\n","-----------\n","A의 전치행렬\n"," [[1. 4.]\n"," [2. 5.]\n"," [3. 6.]]\n","A_T.shape\n"," (3, 2)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"NubNYgh6CKpY","colab_type":"text"},"source":["## 3차원 텐서\n","- 보통 이미지를 나타낼 때 사용되는 텐서\n","  - (width, height, channels)\n","  - 일반적으로 Numpy array로 표현  \n","![3d tensor](https://image.slidesharecdn.com/tensordecomposition-170301235239/95/a-brief-survey-of-tensors-5-638.jpg)\n","<br /><sub>출처: https://www.slideshare.net/BertonEarnshaw/a-brief-survey-of-tensors</sub>\n","- 시계열 데이터 또는 시퀀스(sequence) 데이터를 표현할 때도 사용\n","  - (samples, timesteps, features)\n","  - (예시) 주식 가격 데이터셋, 시간에 따른 질병 발병 건수  \n","![](https://kr.mathworks.com/help/deeplearning/examples/timeseriesforecastingusingdeeplearningexample_01_ko_KR.png)\n","<br /><sub>출처: https://kr.mathworks.com/help/deeplearning/examples/time-series-forecasting-using-deep-learning.html</sub>"]},{"cell_type":"code","metadata":{"id":"IvVjleI1Bbpn","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":272},"executionInfo":{"status":"ok","timestamp":1600823366993,"user_tz":-540,"elapsed":1568,"user":{"displayName":"Jenghun Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh8ozrjTEd4aTd3Fh173JQLBXjO_CSmgf9PQPLonQ=s64","userId":"01114927838914716549"}},"outputId":"47c2127c-bf2e-495e-dc27-25a0530128e9"},"source":["X = np.array([[[5,3,2,1],\n","               [5,5,3,1,],\n","               [6,1,2,3]],\n","              [[1,1,1,1,],\n","              [3,4,7,5,],\n","               [1,8,3,4]],\n","              [[10,9,3,9],\n","               [5,4,3,2,],\n","               [7,6,3,4]]])\n","\n","print('X\\n', X, end='\\n\\n')\n","print('X.shape:', X.shape)\n","print('X.ndim', X.ndim)\n"],"execution_count":28,"outputs":[{"output_type":"stream","text":["X\n"," [[[ 5  3  2  1]\n","  [ 5  5  3  1]\n","  [ 6  1  2  3]]\n","\n"," [[ 1  1  1  1]\n","  [ 3  4  7  5]\n","  [ 1  8  3  4]]\n","\n"," [[10  9  3  9]\n","  [ 5  4  3  2]\n","  [ 7  6  3  4]]]\n","\n","X.shape: (3, 3, 4)\n","X.ndim 3\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"CJdUSaqKBbmG","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":289},"executionInfo":{"status":"ok","timestamp":1600823432131,"user_tz":-540,"elapsed":1238,"user":{"displayName":"Jenghun Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh8ozrjTEd4aTd3Fh173JQLBXjO_CSmgf9PQPLonQ=s64","userId":"01114927838914716549"}},"outputId":"80713334-cb7c-4e07-97d3-c2002dba8793"},"source":["B = np.array([[[2,3,4,], [2,3,4,]],\n","              [[1,1,1],[1,1,1]]])\n","\n","print(\"행렬 B\\n\", B, end='\\n\\n')\n","print(\"B의 전치행렬\\n\", B.T)"],"execution_count":29,"outputs":[{"output_type":"stream","text":["행렬 B\n"," [[[2 3 4]\n","  [2 3 4]]\n","\n"," [[1 1 1]\n","  [1 1 1]]]\n","\n","B의 전치행렬\n"," [[[2 1]\n","  [2 1]]\n","\n"," [[3 1]\n","  [3 1]]\n","\n"," [[4 1]\n","  [4 1]]]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"OoBfPQdhCPog","colab_type":"text"},"source":["### 3차원 텐서 활용 예시(이미지)\n","- MNIST Dataset\n","- 28x28 사이즈의 gray scale 이미지들로 구성  \n","![이미지](https://upload.wikimedia.org/wikipedia/commons/thumb/2/27/MnistExamples.png/440px-MnistExamples.png)  \n","<sub>출처: https://ko.wikipedia.org/wiki/MNIST_%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4</sub>\n","\n","  \n","- gray scale: 0~255의 값을 통해 밝기를 표현 \n","  0으로 갈수록 어두워지고, 255로 갈수록 밝아짐 \n","![이미지](https://miro.medium.com/max/1400/1*euc4RxnNo78LFEGrb-QZ7w.jpeg)  \n","<sub>출처: https://medium.com/@himnickson/converting-rgb-image-to-the-grayscale-image-in-java-9e1edc5bd6e7</sub>\n","\n"]},{"cell_type":"code","metadata":{"id":"YmGkMLmEBbkh","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1600823592481,"user_tz":-540,"elapsed":1131,"user":{"displayName":"Jenghun Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh8ozrjTEd4aTd3Fh173JQLBXjO_CSmgf9PQPLonQ=s64","userId":"01114927838914716549"}}},"source":["from keras.datasets import mnist\n","\n","(train_images, train_labels), (test_iamges, test_labels) = mnist.load_data()"],"execution_count":32,"outputs":[]},{"cell_type":"code","metadata":{"id":"7zV5i29eBbgo","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1600823607230,"user_tz":-540,"elapsed":1702,"user":{"displayName":"Jenghun Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh8ozrjTEd4aTd3Fh173JQLBXjO_CSmgf9PQPLonQ=s64","userId":"01114927838914716549"}},"outputId":"7851042e-b633-47e4-f4c3-03ac3299a87d"},"source":["print(train_images.ndim)"],"execution_count":34,"outputs":[{"output_type":"stream","text":["3\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"yWpHOjFyBbfN","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1600823622007,"user_tz":-540,"elapsed":1197,"user":{"displayName":"Jenghun Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh8ozrjTEd4aTd3Fh173JQLBXjO_CSmgf9PQPLonQ=s64","userId":"01114927838914716549"}},"outputId":"00c38ee0-b3e7-4cd0-e549-d45ef5588b2c"},"source":["print(train_images.shape)"],"execution_count":35,"outputs":[{"output_type":"stream","text":["(60000, 28, 28)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"tRwClWKsBbcg","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1600823692938,"user_tz":-540,"elapsed":1270,"user":{"displayName":"Jenghun Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh8ozrjTEd4aTd3Fh173JQLBXjO_CSmgf9PQPLonQ=s64","userId":"01114927838914716549"}},"outputId":"1b24459f-bb39-4d66-99ec-1d62024721d0"},"source":["print(train_images.dtype)"],"execution_count":40,"outputs":[{"output_type":"stream","text":["uint8\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"WlN4f8mmBbZI","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":262},"executionInfo":{"status":"ok","timestamp":1600823687199,"user_tz":-540,"elapsed":1040,"user":{"displayName":"Jenghun Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh8ozrjTEd4aTd3Fh173JQLBXjO_CSmgf9PQPLonQ=s64","userId":"01114927838914716549"}},"outputId":"5c2e2ba5-2370-4fa0-ea1d-3389bd5800b9"},"source":["temp_image = train_images[3]\n","plt.imshow(temp_image, cmap='gray')\n","plt.show()"],"execution_count":39,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"6zrYXjEoCnZG","colab_type":"text"},"source":["## 브로드캐스팅(broadcasting)\n","- 넘파이에서 다른 형상(shape)끼리 계산 가능\n","\n","- 1차원 텐서\n","\n","![1d](https://numpy.org/doc/1.18/_images/theory.broadcast_1.gif)\n","\n","- 2차원 텐서\n","\n","![2d](https://numpy.org/doc/1.18/_images/theory.broadcast_2.gif)\n","\n","- 더 작은 형상(shape)이 형상이 더 큰 배열에 확장 가능해야함\n","\n","![broadcast](https://numpy.org/doc/1.18/_images/theory.broadcast_3.gif) \n","\n","- (참고) 아래의 경우도 가능\n","\n","![broadcast](https://numpy.org/doc/1.18/_images/theory.broadcast_4.gif)\n","\n","<br /><sub>https://numpy.org/doc/1.18/user/theory.broadcasting.html#array-broadcasting-in-numpy</sub>"]},{"cell_type":"code","metadata":{"id":"CvD1A-YzCnLj","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"executionInfo":{"status":"ok","timestamp":1600823730036,"user_tz":-540,"elapsed":1455,"user":{"displayName":"Jenghun Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh8ozrjTEd4aTd3Fh173JQLBXjO_CSmgf9PQPLonQ=s64","userId":"01114927838914716549"}},"outputId":"98d2cdd9-ad7e-4ccb-9095-c7af5411dbe3"},"source":["a = np.array(10)\n","b  = np.array([10, 20, 30])\n","print(np.dot(a,b))\n","print( a* b)"],"execution_count":41,"outputs":[{"output_type":"stream","text":["[100 200 300]\n","[100 200 300]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"GBqGnivIBbTz","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":153},"executionInfo":{"status":"ok","timestamp":1600823784794,"user_tz":-540,"elapsed":1526,"user":{"displayName":"Jenghun Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh8ozrjTEd4aTd3Fh173JQLBXjO_CSmgf9PQPLonQ=s64","userId":"01114927838914716549"}},"outputId":"9306b019-3847-4ec3-bd09-0d020faf7996"},"source":["A = np.array([[1,2],[3,4]])\n","B= np.array([10,20])\n","print('행렬 A\\n', A)\n","print('행렬 B\\n', B)\n","print('A * B\\n', A* B)"],"execution_count":44,"outputs":[{"output_type":"stream","text":["행렬 A\n"," [[1 2]\n"," [3 4]]\n","행렬 B\n"," [10 20]\n","A * B\n"," [[10 40]\n"," [30 80]]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"c0CvqipjCq9-","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":306},"executionInfo":{"status":"ok","timestamp":1600823953451,"user_tz":-540,"elapsed":1197,"user":{"displayName":"Jenghun Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh8ozrjTEd4aTd3Fh173JQLBXjO_CSmgf9PQPLonQ=s64","userId":"01114927838914716549"}},"outputId":"4018f9aa-abd5-4eb7-8c0a-20fa7a89d3b9"},"source":["A = np.array([[[1,1,1],\n","               [2,2,2]],\n","              [[3,3,3],\n","              [4,4,4]]])\n","B = np.array([[10,10,10]])\n","\n","print('행렬 A\\n', A, end='\\n\\n')\n","print('A.shape', A.shape)\n","print('행렬 B\\n', B)\n","print('B.shape', B.shape)\n","print('A * B\\n', A* B)"],"execution_count":48,"outputs":[{"output_type":"stream","text":["행렬 A\n"," [[[1 1 1]\n","  [2 2 2]]\n","\n"," [[3 3 3]\n","  [4 4 4]]]\n","\n","A.shape (2, 2, 3)\n","행렬 B\n"," [[10 10 10]]\n","B.shape (1, 3)\n","A * B\n"," [[[10 10 10]\n","  [20 20 20]]\n","\n"," [[30 30 30]\n","  [40 40 40]]]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"O3dSdUymCsEh","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":198},"executionInfo":{"status":"error","timestamp":1600823997622,"user_tz":-540,"elapsed":1041,"user":{"displayName":"Jenghun Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh8ozrjTEd4aTd3Fh173JQLBXjO_CSmgf9PQPLonQ=s64","userId":"01114927838914716549"}},"outputId":"d2ca3bf8-61bb-4fac-dfcb-0a551abd9c62"},"source":["A = np.array([[1,2,3],[4,5,6]])\n","B= np.array([10,10])\n","print('A * B\\n', A* B)"],"execution_count":49,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-49-a7bc73eb7d4e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mA\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m6\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mB\u001b[0m\u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'A * B\\n'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mA\u001b[0m\u001b[0;34m*\u001b[0m \u001b[0mB\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mValueError\u001b[0m: operands could not be broadcast together with shapes (2,3) (2,) "]}]},{"cell_type":"markdown","metadata":{"id":"oMdQuRrbCvHh","colab_type":"text"},"source":["## 4, 5차원 텐서\n","- Color Image Datasets(4차원)\n","  - (samples, height, width, channels) ( Keras, Tensorflow )\n","  - (samples, channels, height, width) ( Pytorch )\n","\n","\n","- 동영상(5차원)\n","  1. (samples, frames, height, width, channels)\n","  2. (samples, frames, channels, height, width)\n","  - 예시 1) (4, 300, 1920, 1080, 3) \n","    - 1920x1080 사이즈 3채널의 300프레임 수를 가진 배치가 4개"]},{"cell_type":"markdown","metadata":{"id":"owYBNkzMCxaE","colab_type":"text"},"source":["## 텐서 크기 변환\n","- reshape로 텐서의 크기 변환 가능\n","- **변환 전의 원소의 개수와 변환 이후의 텐서의 개수가 같아야** 함"]},{"cell_type":"code","metadata":{"id":"s9NyLg5GCxwF","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":136},"executionInfo":{"status":"ok","timestamp":1600824068348,"user_tz":-540,"elapsed":1644,"user":{"displayName":"Jenghun Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh8ozrjTEd4aTd3Fh173JQLBXjO_CSmgf9PQPLonQ=s64","userId":"01114927838914716549"}},"outputId":"e37e0d96-2dc0-45b2-9075-133111a4ca9c"},"source":["A = np.array([[1,2,3,],[4,5,6]])\n","print('행렬 A\\n', A)\n","print('A.shape', A.shape)\n","print('-----------------')\n","A = A.reshape(6)\n","print(\"A.shape:\", A.shape)\n","print(A)"],"execution_count":51,"outputs":[{"output_type":"stream","text":["행렬 A\n"," [[1 2 3]\n"," [4 5 6]]\n","A.shape (2, 3)\n","-----------------\n","A.shape: (6,)\n","[1 2 3 4 5 6]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"u1vgBq9fC34Q","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":221},"executionInfo":{"status":"ok","timestamp":1600824151920,"user_tz":-540,"elapsed":1848,"user":{"displayName":"Jenghun Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh8ozrjTEd4aTd3Fh173JQLBXjO_CSmgf9PQPLonQ=s64","userId":"01114927838914716549"}},"outputId":"36d25681-422f-4c3e-e1da-78714a655ef5"},"source":["B=  np.array([[[2,3,4],[2,3,4]],\n","              [[1,1,1],[1,1,1]]])\n","\n","print(\"행렬 B:\\n\", B)\n","print('B.shape', B.shape)\n","print('--------------------------')\n","B =B.reshape(3,4)\n","print('B.shape', B.shape)\n","print(B)"],"execution_count":53,"outputs":[{"output_type":"stream","text":["행렬 B:\n"," [[[2 3 4]\n","  [2 3 4]]\n","\n"," [[1 1 1]\n","  [1 1 1]]]\n","B.shape (2, 2, 3)\n","--------------------------\n","B.shape (3, 4)\n","[[2 3 4 2]\n"," [3 4 1 1]\n"," [1 1 1 1]]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"CHN5jR7vC8hO","colab_type":"text"},"source":["- -1 을 통해 자동으로 형상을 지정 가능  \n","  원소의 갯수에 맞게 넘파이가 자동으로 형상을 지정  \n","      (2, 2, 3) -> (3, -1)     (O)\n","                -> (2, 1, 6)   (O)\n","                -> (2, -1, -1) (X)\n","                -> (2, 5, -1)  (X) "]},{"cell_type":"code","metadata":{"id":"gYLuemhdC5KG","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":238},"executionInfo":{"status":"ok","timestamp":1600824213048,"user_tz":-540,"elapsed":603,"user":{"displayName":"Jenghun Kim","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh8ozrjTEd4aTd3Fh173JQLBXjO_CSmgf9PQPLonQ=s64","userId":"01114927838914716549"}},"outputId":"cbdde020-de86-4246-a69a-7ab99d592223"},"source":["B=  np.array([[[2,3,4],[2,3,4]],\n","              [[1,1,1],[1,1,1]]])\n","\n","print(\"행렬 B:\\n\", B)\n","print('B.shape', B.shape)\n","print('--------------------------')\n","B =B.reshape(4, -1)\n","print('B.shape', B.shape)\n","print(B)"],"execution_count":54,"outputs":[{"output_type":"stream","text":["행렬 B:\n"," [[[2 3 4]\n","  [2 3 4]]\n","\n"," [[1 1 1]\n","  [1 1 1]]]\n","B.shape (2, 2, 3)\n","--------------------------\n","B.shape (4, 3)\n","[[2 3 4]\n"," [2 3 4]\n"," [1 1 1]\n"," [1 1 1]]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"jbvAs_kDjvtQ","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]}]}